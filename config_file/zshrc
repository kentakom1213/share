
# starshipの導入
eval "$(starship init zsh)"


# c++のコンパイル (競プロ用)
function cppbuild() {
    local dir=$(dirname $1:a)
    local out_path=$1:r
    /usr/bin/clang++ \
        -std=c++17 \
        -o "$dir/$out_path" \
        $1
}

# C言語のコンパイル
function cbuild() {
    local dir=$(dirname $1:a)
    local out_path=$1:r
    /usr/bin/gcc \
        -fdiagnostics-color=always \
        -o "$dir/$out_path" \
        $1
}

# 実行する関数
function run() {
    if [[ $1:e = 'cpp' ]]; then
        local dir=$(dirname $1:a)
        cppbuild $1

        if [[ $? -eq 0 ]]; then
            local out="$dir/$1:r"
            echo "-- build complete --"
            $out
            # rm $out
        fi
    else
        echo "-- input --"
        python3 $1
    fi
}

# venv
function activate() {
    local cur=$(basename $PWD)
    . .$cur/bin/activate
}

# mkdir+cd
mkcd () {
    mkdir $1 && cd $1 && pwd
}


# エイリアス
alias accpy="acc s main.py -- --guess-python-interpreter pypy"
alias ojtpy="oj test -c 'python3 main.py'"
alias ojtcpp="cppbuild main.cpp &&oj test -c './_main'"

alias tree="tree -N"
alias typora="open -a typora"
alias finder="open -a finder"

# youtube-dlの証明書エラーを無視
alias youtube-dl_="youtube-dl --no-check-certificate"

# PATH
export PATH="/opt/homebrew/opt/python@3.10/bin:$PATH"

# 競プロ支援ツール
alias mkfile="python3 ~/Docker/kyopuro/Organizer/make_file.py"


[ -f "/Users/[your-user-name]/.ghcup/env" ] && source "/Users/[your-user-name]/.ghcup/env" # ghcup-env
. $HOME/.ghcup/env

export PATH="/usr/local/opt/llvm/bin:$PATH"
export PATH="/opt/homebrew/opt/llvm/bin:$PATH"

